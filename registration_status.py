# registration_status.py
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

async def check_registration_status(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Check registration status by user's Telegram ID."""
    telegram_id = update.message.from_user.id

    team = context.bot_data['db'].get_team_by_telegram_id(telegram_id)

    if team:
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
        status_translation = {
            "pending": "–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
            "approved": "–û–¥–æ–±—Ä–µ–Ω–æ",
            "rejected": "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ",
        }
        status = status_translation.get(team['status'], "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")  # Fallback

        message = (
            f"<b>–°—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            f"üèÜ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team['team_name']}\n"
            f"‚úÖ –°—Ç–∞—Ç—É—Å: {status}\n"
            f"üë• –ò–≥—Ä–æ–∫–∏:\n"
        )
        for player in team['players']:
            message += f"  - üéÆ {player[0]} (@{player[1]})\n"
    else:
        message = "‚ö†Ô∏è –í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤–∞—Å –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ."

    await update.message.reply_text(message, parse_mode='HTML')
    return ConversationHandler.END  # Exit conversation
